on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp: ['24.3.4.1']
        elixir: ['1.13.4']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{matrix.elixir}}
        otp-version: ${{matrix.otp}}
        version-type: strict

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Run tests
      run: |
        epmd -daemon
        mix test

    # If the following is too slow, we can ditch it. Should only be slow once after an Erlang/Elixir version upgrade.
    - name: Retrieve Dialyzer PLT cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}-v2
    - name: Create Dialyzer PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    - name: Run Dialyzer
      run: MIX_ENV=test mix dialyzer --no-check

  # We only execute the rest if we're on develop or main, if you need a container
  # for a different branch, it is easy enough to build it locally.

  build-push-container:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::147803588724:role/github-action
          aws-region: us-west-2
      - name: Fetch Secret into Env
        run: .github/secret-to-env.sh
      - name: Import signing key
        run: aws secretsmanager get-secret-value --secret-id /prod/gh-actions/signing-key --region us-west-2 | jq -r '.SecretString' | gpg --import
      - name: Build and push container
        run: |
          dist/login.sh
          ./build-and-push.sh

  build-push-dist:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    strategy:
      matrix:
        os: ['ubuntu-20.04', 'ubuntu-22.04', 'amazon_linux-2']
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::147803588724:role/github-action
          aws-region: us-west-2
      - name: Fetch Secret into Env
        run: .github/secret-to-env.sh
      - name: Import signing key
        run: aws secretsmanager get-secret-value --secret-id /prod/gh-actions/signing-key --region us-west-2 | jq -r '.SecretString' | gpg --import
      - name: Build and push distribution packages
        run: |
          dist/login.sh
          dist=$(echo ${{ matrix.os }} | awk -F- '{print $1}' | sed 's/_/-/')
          ver=$(echo ${{ matrix.os }} | awk -F- '{print $2}')
          dist/build.sh $dist $ver

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [build-push-container]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::147803588724:role/github-action
          aws-region: us-west-2
      - name: Fetch Secret into Env
        run: .github/secret-to-env.sh
      - name: Deploy Orchestrator container
        run: ./deploy.sh
